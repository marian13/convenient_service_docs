"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[9399],{8688:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>o});var t=s(4848),a=s(8453);const r={slug:"/basics/step_to_result_translation_table",sidebar_position:8,title:"Steps translation table"},l=void 0,i={id:"basics/step_to_result_translation_table",title:"Steps translation table",description:"This page contains a table of demonstrative translations of step definitions into result invocations.",source:"@site/docs/basics/step_to_result_translation_table.mdx",sourceDirName:"basics",slug:"/basics/step_to_result_translation_table",permalink:"/basics/step_to_result_translation_table",draft:!1,unlisted:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/basics/step_to_result_translation_table.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{slug:"/basics/step_to_result_translation_table",sidebar_position:8,title:"Steps translation table"},sidebar:"docs",previous:{title:"Steps",permalink:"/basics/steps"},next:{title:"Steps evaluation table",permalink:"/basics/steps_evaluation_table"}},d={},o=[{value:"No <code>in</code> or <code>out</code>",id:"no-in-or-out",level:3},{value:"One <code>in</code> usual method",id:"one-in-usual-method",level:3},{value:"Multiple <code>in</code> usual methods",id:"multiple-in-usual-methods",level:3},{value:"One <code>in</code> alias method",id:"one-in-alias-method",level:3},{value:"Multiple <code>in</code> alias method",id:"multiple-in-alias-method",level:3},{value:"One <code>out</code> usual method",id:"one-out-usual-method",level:3},{value:"Multiple <code>out</code> usual methods",id:"multiple-out-usual-methods",level:3},{value:"One <code>out</code> alias method",id:"one-out-alias-method",level:3},{value:"Multiple <code>out</code> alias methods",id:"multiple-out-alias-methods",level:3},{value:"One <code>in</code> raw value",id:"one-in-raw-value",level:3},{value:"Multiple <code>in</code> raw values",id:"multiple-in-raw-values",level:3},{value:"One <code>in</code> proc method",id:"one-in-proc-method",level:3},{value:"Multiple <code>in</code> proc methods",id:"multiple-in-proc-methods",level:3},{value:"All-in-one example:",id:"all-in-one-example",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This page contains a table of demonstrative translations of step definitions into result invocations."}),"\n",(0,t.jsx)(n.p,{children:"It is especially useful for newcomers who are not familiar with the Convenient Service DSL yet."}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Any combination of the ",(0,t.jsx)(n.code,{children:"in"})," and ",(0,t.jsx)(n.code,{children:"out"})," options described throughout this reference can be used together."]})}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"All the examples in this page are using service steps."}),(0,t.jsx)(n.p,{children:"But it is also perfectly valid to use method steps in them."}),(0,t.jsxs)(n.p,{children:["The behavior of the ",(0,t.jsx)(n.code,{children:"in"})," and ",(0,t.jsx)(n.code,{children:"out"})," options stays the same for both cases."]})]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["All the examples in this page are using ",(0,t.jsx)(n.code,{children:"step"})," directive."]}),(0,t.jsxs)(n.p,{children:["But it is also perfectly valid to use ",(0,t.jsx)(n.code,{children:"and_step"}),", ",(0,t.jsx)(n.code,{children:"not_step"}),", ",(0,t.jsx)(n.code,{children:"and_not_step"}),", ",(0,t.jsx)(n.code,{children:"or_step"}),", and ",(0,t.jsx)(n.code,{children:"or_not_step"})," in them."]}),(0,t.jsxs)(n.p,{children:["The behavior of the ",(0,t.jsx)(n.code,{children:"in"})," and ",(0,t.jsx)(n.code,{children:"out"})," options stays the same for all the cases."]})]}),"\n",(0,t.jsxs)(n.h3,{id:"no-in-or-out",children:["No ",(0,t.jsx)(n.code,{children:"in"})," or ",(0,t.jsx)(n.code,{children:"out"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definition:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step AssertNodeAvailable\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"def step_result\n  @step_result ||= AssertNodeAvailable.result\nend\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"one-in-usual-method",children:["One ",(0,t.jsx)(n.code,{children:"in"})," usual method"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definitions (equivalent):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step ValidateUncastedParams,\n  in: :params\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step ValidateUncastedParams,\n  in: [\n    :params\n  ]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"def step_result\n  @step_result ||=\n    ValidateUncastedParams.result(\n      params: params\n    )\nend\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"multiple-in-usual-methods",children:["Multiple ",(0,t.jsx)(n.code,{children:"in"})," usual methods"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definition:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step LogRequestParams,\n  in: [\n    :request,\n    :params\n  ]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"def step_result\n  @step_result ||=\n    LogRequestParams.result(\n      request: request,\n      params: params\n    )\nend\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"one-in-alias-method",children:["One ",(0,t.jsx)(n.code,{children:"in"})," alias method"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definitions (equivalent):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step ValidateCastedParams,\n  in: {casted_params: :params}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step ValidateCastedParams,\n  in: [\n    {casted_params: :params}\n  ]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"def step_result\n  @step_result ||=\n    ValidateCastedParams.result(\n      casted_params: params\n    )\nend\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"multiple-in-alias-method",children:["Multiple ",(0,t.jsx)(n.code,{children:"in"})," alias method"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definitions:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step AuditContent,\n  in: [\n    {content: :content_without_comments},\n    {verbose: :debug}\n  ]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"def step_result\n  @step_result ||=\n    AuditContent.result(\n      content: content_without_comments,\n      verbose: debug\n    )\nend\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"one-out-usual-method",children:["One ",(0,t.jsx)(n.code,{children:"out"})," usual method"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definitions (equivalent):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step ReadFileContent,\n  in: :path,\n  out: :content\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step ReadFileContent,\n  in: :path,\n  out: [\n    :content\n  ]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"def step_result\n  @step_result ||=\n    ReadFileContent.result(\n      path: path\n    )\nend\n\ndef content\n  step_result.data[:content]\nend\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"multiple-out-usual-methods",children:["Multiple ",(0,t.jsx)(n.code,{children:"out"})," usual methods"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definition:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step CastParams,\n  in: :params,\n  out: [\n    :original_params,\n    :casted_params\n  ]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"def step_result\n  @step_result ||=\n    CastParams.result(\n      params: params\n    )\nend\n\ndef original_params\n  step_result.data[:original_params]\nend\n\ndef casted_params\n  step_result.data[:casted_params]\nend\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"one-out-alias-method",children:["One ",(0,t.jsx)(n.code,{children:"out"})," alias method"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definitions (equivalent):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step FormatHeader,\n  in: :parsed_content,\n  out: {formatted_content: :formatted_header_content}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step FormatHeader,\n  in: :parsed_content,\n  out: [\n    {formatted_content: :formatted_header_content}\n  ]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"def step_result\n  @step_result ||=\n    FormatHeader.result(\n      parsed_content: parsed_content\n    )\nend\n\ndef formatted_header_content\n  step_result.data[:formatted_content]\nend\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"multiple-out-alias-methods",children:["Multiple ",(0,t.jsx)(n.code,{children:"out"})," alias methods"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definition:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step ExtractParamsFromRequest,\n  in: :request,\n  out: [\n    {header_params: :request_params_from_header},\n    {body_params: :request_params_from_body}\n  ]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"def step_result\n  @step_result ||=\n    ExtractParamsFromRequest.result(\n      request: request\n    )\nend\n\ndef request_params_from_header\n  step_result.data[:header_params]\nend\n\ndef request_params_from_body\n  step_result.data[:body_params]\nend\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"one-in-raw-value",children:["One ",(0,t.jsx)(n.code,{children:"in"})," raw value"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definitions (equivalent):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step AssertFeatureEnabled,\n  in: {name: raw(:chat_v2)}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"step AssertFeatureEnabled,\n  in: [\n    {name: raw(:chat_v2)}\n  ]\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"def step_result\n  @step_result ||=\n    AssertFeatureEnabled.result(\n      name: :chat_v2\n    )\nend\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"multiple-in-raw-values",children:["Multiple ",(0,t.jsx)(n.code,{children:"in"})," raw values"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definitions (equivalent):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'step PrintShellCommand,\n  in: [\n    {text: raw("ls -a")}\n    {stream: raw($stdout)}\n  ]\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'def step_result\n  @step_result ||=\n    PrintShellCommand.result(\n      text: "ls -a",\n      stream: $stdout\n    )\nend\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"in"})," raw values are useful for passing values, constants, methods, etc from the class scope."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'step PrintShellCommand,\n  in: [\n    {text: raw(display_directory_structure_command)}\n    {stream: raw($stdout)}\n  ]\n\ndef self.display_directory_structure_command\n  "ls -a"\nend\n'})})]}),"\n",(0,t.jsxs)(n.h3,{id:"one-in-proc-method",children:["One ",(0,t.jsx)(n.code,{children:"in"})," proc method"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definitions (equivalent):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'step RemoveDirectoryRecursively,\n  in: {path: ->{ "/tmp" }}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'step RemoveDirectoryRecursively,\n  in: [\n    {path: ->{ "/tmp" }}\n  ]\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'def step_result\n  @step_result ||=\n    RemoveDirectoryRecursively.result(\n      path: "/tmp"\n    )\nend\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"multiple-in-proc-methods",children:["Multiple ",(0,t.jsx)(n.code,{children:"in"})," proc methods"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definition:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'step CreateSoftLink,\n  in: [\n    {source: ->{ "~/.bash_profile" }},\n    {destination: ->{ "#{Dir.pwd}/bash_profile_link" }}\n  ]\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'def step_result\n  @step_result ||=\n    CreateSoftLink.result(\n      source: "~/.bash_profile",\n      destination: "#{Dir.pwd}/bash_profile_link"\n    )\nend\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"in"})," proc methods are useful for passing values, constants, methods, etc from the instance scope."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'step CreateSoftLink,\n  in: [\n    {source: ->{ "~/.bash_profile" }},\n    {destination: ->{ generate_destination_path }}\n  ]\n\ndef generate_destination_path\n  "#{Dir.pwd}/bash_profile_link"\nend\n'})})]}),"\n",(0,t.jsx)(n.h3,{id:"all-in-one-example",children:"All-in-one example:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Definition:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'ENV["API_ONLY"] = true\n\nclass UpdatePost\n  include ConvenientService::Standard::Config\n\n  PERMITTED_PARAMS = [:id, :format, :title, :description, :tags, :sources]\n\n  attr_reader :http_string\n\n  # ...\n\n  # highlight-start\n  step PrepareRequestObject\n    in: [\n      :http_string,\n      {url_pattern: raw(url_pattern)},\n      {role: ->{ admin? }},\n      {permitted_keys: raw(PERMITTED_PARAMS)}\n      {defaults: ->{ resolve_defaults_values }}\n    ],\n    out: [\n      :params_from_path,\n      :params_from_body,\n      {headers: :request_headers}\n    ]\n  # highlight-end\n\n  # ...\n\n  def self.url_pattern\n    /^\\/rules\\/(?<id>\\d+)\\.(?<format>\\w+)$/\n  end\n\n  def admin?\n    false\n  end\n\n  def resolve_defaults_values\n    defaults_values = {format: "html", tags: [], sources: []}\n\n    defaults_values[:format] = "json" if ENV["API_ONLY"]\n\n    defaults_values\n  end\n\n  # ...\nend\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Translation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'ENV["API_ONLY"] = true\n\nclass UpdatePost\n  include ConvenientService::Standard::Config\n\n  PERMITTED_PARAMS = [:id, :format, :title, :description, :tags, :sources]\n\n  attr_reader :http_string\n\n  # ...\n\n  # highlight-start\n  def step_result\n    @step_result ||= PrepareRequestObject.result(\n      http_string: http_string,\n      url_pattern: /^\\/rules\\/(?<id>\\d+)\\.(?<format>\\w+)$/,\n      role: admin?, # => false\n      permitted_keys: [:id, :format, :title, :description, :tags, :sources],\n      defaults: resolve_defaults_values # => {format: "json", tags: [], sources: []}\n    )\n  end\n\n  def params_from_path\n    step_result.data[:params_from_path]\n  end\n\n  def params_from_body\n    step_result.data[:params_from_body]\n  end\n\n  def request_headers\n    step_result.data[:headers]\n  end\n  # highlight-end\n\n  # ...\n\n  def self.url_pattern\n    /^\\/rules\\/(?<id>\\d+)\\.(?<format>\\w+)$/\n  end\n\n  def admin?\n    false\n  end\n\n  def resolve_defaults_values\n    defaults_values = {format: "html", tags: [], sources: []}\n\n    defaults_values[:format] = "json" if ENV["API_ONLY"]\n\n    defaults_values\n  end\n\n  # ...\nend\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"def step_result"})," is used to express the concept."]}),(0,t.jsxs)(n.p,{children:["In reality, such a method is not generated by the ",(0,t.jsx)(n.a,{href:"/",children:"Convenient Service"})," under the hood."]}),(0,t.jsxs)(n.p,{children:["It utilizes ",(0,t.jsx)(n.a,{href:"https://github.com/marian13/convenient_service/blob/main/lib/convenient_service/service/plugins/has_result_steps/concern.rb",children:"a lower-level toolset"})," that is out of the scope of this guide."]})]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>i});var t=s(6540);const a={},r=t.createContext(a);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);